version: '3.9'
services:
  access_control_db:
    image: postgres
    container_name: access_control_db
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=access_control_db
    volumes:
      - ../db/pgdata:/data/postgres
      - ../db/init:/docker-entrypoint-initdb.d

  api-access-control:
    container_name: api-access-control
    restart: always
    build:
      context: ../
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    networks:
      - custom-network
    depends_on:
      access_control_db:
        condition: service_healthy
    extra_hosts:
      - 'host.docker.internal:host-gateway'
  nginx:
    image: nginx
    container_name: nginx
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - 80:80
    networks:
      - custom-network
    depends_on:
      - access_control_db
    extra_hosts:
      - 'host.docker.internal:host-gateway'

networks:
  custom-network:
    driver: bridge
