---
config:
  layout: dagre
  id: e997739c-20bf-4ee7-8b88-9bb4fdf59a85
---
flowchart TD
    Api@{ shape: rect, label: "Api REST | Event Driven" }

    %% Gestão de novos clientes (Company)
    AdministratorNewClient["Adm cadastra novo cliente (nome, dominio, email do gestor)"] -- "POST /companies com payload" --> Api
    Api --> StoreValidator["Cadastro com sucesso?"]
    StoreValidator -- Sim (Gera a Senha temporária e o Link do Dashboard) --> SendMailToCompany@{ shape: subproc, label: "Envia e-mail para o Gestor com o Link do Dashboard + a Senha Temporária" }
    StoreValidator -- Não (Já existe uma Company, Email inválido, Gestor já existe) --> AdministratorNewClient
    StoreValidator@{ shape: diam }
    AdministratorNewClient@{ shape: circle }

    %% Gestão de integração e Sincronização de dados
    AdministratorNewIntegration["Adm Inicia integração"] --> Step1@{ shape: lean-r, label: "Preenche as Credenciais (????)" } 
    Step1 --> Step2@{ shape: lean-r, label: "Faz o mapeamento dos campos" }
    Step2 -- "POST /companies/:code/integration" --> Api
    Api --> IntegrationValidator@{ shape: diam, label: "Os dados estão corretos?" }
    IntegrationValidator -- "Sim" --> StartSyncing@{ shape: subproc, label: "Inicia o processo de sincronização" }
    StartSyncing -- "Retorna o status 'syncing'" --> AdministratorNewIntegration
    IntegrationValidator -- "Não, retorna o fedback de erro (dados inválidos)" --> AdministratorNewIntegration
    StartSyncing --> IntegrationSyncingValidator["Response 200?"]
    IntegrationSyncingValidator -- "Sim, Retorna o feedback informando que a integração foi feita e as pessoas foram sincronizados" --> AdministratorNewIntegration
    IntegrationSyncingValidator -- "Não, Retorna o feedback do erro (Campo incorreto?, falha na comunicação com a API?)" --> AdministratorNewIntegration
    IntegrationSyncingValidator@{ shape: diam }
    AdministratorNewIntegration@{ shape: circle }

    %% Gestão de Acesso e Autorização por Dispositivo
    Hw["Leitura facial"] -- "Envia a foto para a API (Event)" --> Api
    Api --> AuthValidator["Usuário permitido?"]
    AuthValidator -- "Sim, responde com autorizado" --> Hw
    AuthValidator -- "Não, responde com não autorizado" --> Hw
    Hw@{ shape: circle }
    AuthValidator@{ shape: diam }

    %% Gestão de dispositivos
    AdministratorDevice --> AddNewDevice
    ManagerDevice --> AddNewDevice
    AddNewDevice -- "Registra novo Dispositivo, payload: ip, name (/companies/:code/devices)" --> Api
    Api -- "Timeout default da tentativa de conexão é 5s (5000ms)" --> DeviceLogin@{ shape: subproc, label: "Api conecta no device pelo endpoint /login.fcgi" }
    DeviceLogin --> DeviceLoginValidator@{ shape: diam, label: "Dispositivo registrado com sucesso?" }
    DeviceLoginValidator -- "Sim, salva log e retorna feedback de sucesso da conexão com novo Dispositivo" --> AddNewDevice
    DeviceLoginValidator -- "Não, salva log e retorna o feedback de erro" --> AddNewDevice
    AdministratorDevice@{ shape: circle, label: "Administrador Registra novo Dispositivo" }
    AddNewDevice@{ shape: rect, label: "Página para inserir Dispositivo" }
    ManagerDevice@{ shape: circle, label: "Gestor da Conta Registra novo Dispositivo" }

    %% Gestão de Login, Autorização e Usuários